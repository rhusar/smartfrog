2007/10/09 00:39:24:312 BST [WARN ][main] SFCORE_LOG - Log 'SFCORE_LOG' , values [class,level,codebase]: org.smartfrog.sfcore.logging.LogToFileImpl, 3, null
using Class ComponentDescription:
{null}
, and using Component ComponentDescription:
{null} ** org.smartfrog.SFSystem.sfLog(SFSystem.java:623) ** 
2007/10/09 00:39:24:312 BST [WARN ][main] SFCORE_LOG - Error during initialization of localLog for LogImpl. Next trying to use Default (LogToFile) ** org.smartfrog.SFSystem.sfLog(SFSystem.java:623) **  <SmartFrogResolutionException:: Error during parsing of 'org/smartfrog/sfcore/logging/logimpl.sf'. Parser error while resolving phases [SmartFrogResolutionException:: function, cause: java.lang.NullPointerException]
    cause: SmartFrogResolutionException:: function
       cause: java.lang.NullPointerException>
        
2007/10/09 00:39:24:312 BST [WARN ][main] SFCORE_LOG - Error during init of class org.smartfrog.Version ** org.smartfrog.sfcore.logging.LogImpl.warn(LogImpl.java:819) **  <SmartFrogResolutionException:: Error during parsing of 'org/smartfrog/version.sf'. Parser error while resolving phases [SmartFrogResolutionException:: function, cause: java.lang.NullPointerException]
    cause: SmartFrogResolutionException:: function
       cause: java.lang.NullPointerException>
        

Parser - SmartFrog 3.4.17 (buildDate)
2007/10/09 00:39:24:312 BST [WARN ][main] SFCORE_LOG - Error during init of class org.smartfrog.Version ** org.smartfrog.sfcore.logging.LogImpl.warn(LogImpl.java:819) **  <SmartFrogResolutionException:: Error during parsing of 'org/smartfrog/version.sf'. Parser error while resolving phases [SmartFrogResolutionException:: function, cause: java.lang.NullPointerException]
    cause: SmartFrogResolutionException:: function
       cause: java.lang.NullPointerException>
        
(C) Copyright 1998-2006 HP Development Company, LP
 
******************** PHASE raw *********************
extends DATA {
  Function extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "";
  }
  vector extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Vector";
    };
  append extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Append";
    };
  concat extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Concatenate";
    };
  formatString extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Format";
    };
  sum extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Sum";
    };
  plus extends sum;
  product extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Product";
    };
  minus extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Minus";
    };
  divide extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Divide";
    };
  and extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.And";
    };
  or extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Or";
    };
  not extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Not";
    };
  GE extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.GE";
    };
  LE extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.LE";
    };
  GT extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.GT";
    };
  LT extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.LT";
    };
  EQ extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.EQ";
    };
  NE extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.NE";
    };
  ifThenElse extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.IfThenElse";
    };
  next extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Next";
    };
  random extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Random";
    };
  date extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Date";
    };
  userinput extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.UserInput";
    };
  ref extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Ref";
    };
  Ref extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Ref";
    };
  Constraint extends Function, {
      sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Constraint";
    };
  sfConfig extends {
    foo bar;
    foo2 bar2;
  }
  bar extends Constraint, {
      [ sfConstraint ] pred2 "hello2";
      x VAR/0;
      [ sfConstraint ] pred3 "hello3";
      [ sfConstraint ] pred1 "hello1";
    };
  bar2 extends {
    boolox1 2;
  }
}






******************** PHASE type *********************
extends DATA {
  Function extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "";
  }
  vector extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Vector";
  }
  append extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Append";
  }
  concat extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Concatenate";
  }
  formatString extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Format";
  }
  sum extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Sum";
  }
  plus extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Sum";
  }
  product extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Product";
  }
  minus extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Minus";
  }
  divide extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Divide";
  }
  and extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.And";
  }
  or extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Or";
  }
  not extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Not";
  }
  GE extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.GE";
  }
  LE extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.LE";
  }
  GT extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.GT";
  }
  LT extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.LT";
  }
  EQ extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.EQ";
  }
  NE extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.NE";
  }
  ifThenElse extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.IfThenElse";
  }
  next extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Next";
  }
  random extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Random";
  }
  date extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Date";
  }
  userinput extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.UserInput";
  }
  ref extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Ref";
  }
  Ref extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Ref";
  }
  Constraint extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Constraint";
  }
  sfConfig extends {
    foo bar;
    foo2 bar2;
  }
  bar extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Constraint";
    [ sfConstraint ] pred2 "hello2";
    x VAR/1;
    [ sfConstraint ] pred3 "hello3";
    [ sfConstraint ] pred1 "hello1";
  }
  bar2 extends {
    boolox1 2;
  }
}






******************** PHASE place *********************
extends DATA {
  Function extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "";
  }
  vector extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Vector";
  }
  append extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Append";
  }
  concat extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Concatenate";
  }
  formatString extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Format";
  }
  sum extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Sum";
  }
  plus extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Sum";
  }
  product extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Product";
  }
  minus extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Minus";
  }
  divide extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Divide";
  }
  and extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.And";
  }
  or extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Or";
  }
  not extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Not";
  }
  GE extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.GE";
  }
  LE extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.LE";
  }
  GT extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.GT";
  }
  LT extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.LT";
  }
  EQ extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.EQ";
  }
  NE extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.NE";
  }
  ifThenElse extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.IfThenElse";
  }
  next extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Next";
  }
  random extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Random";
  }
  date extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Date";
  }
  userinput extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.UserInput";
  }
  ref extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Ref";
  }
  Ref extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Ref";
  }
  Constraint extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Constraint";
  }
  sfConfig extends {
    foo bar;
    foo2 bar2;
  }
  bar extends {
    phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Constraint";
    [ sfConstraint ] pred2 "hello2";
    x VAR/1;
    [ sfConstraint ] pred3 "hello3";
    [ sfConstraint ] pred1 "hello1";
  }
  bar2 extends {
    boolox1 2;
  }
}






ERROR 'test2.sf': 
SmartFrogResolutionException:: function, cause: java.lang.NullPointerException

Error detected. Check report.
SFParse: FAILED
