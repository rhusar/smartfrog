#!/bin/sh

###### Definitions


# Prints a message, the usage message, and exits. Arguments:
# $1: Message string, required.
# $2: Exit value (default: 69)
usage() {
    echo "$1"
    cat<<END
Usage:  $0 -h|--help
        $0 target.host [-e|--environment env_description_URL.sf [-e|--environment env_description_URL.sf...]]
                       [AppName description_URL.sf [AppName description_URL.sf...]]
END
    if [ ! -z $2 ]; then
        exit $2
    else
        exit 69
    fi
}

# Escapes spaces in the argument
add_backslashes () {
    echo "$1" | sed -e 's/ /\\ /g'
}

# Check if argument is valid (non-empty and not an option switch).
invalid() {
    [ -z "$1" ] || (echo "$1" | grep -q '^-')
}

valid() {
    if invalid "$1"; then false;
    else true
    fi
}

###### Start of main script

## Setting SFHOME
if [ -z "$SFHOME" -o ! -d "$SFHOME" ] ; then
    SFHOME=`dirname "$0"`/..
    SFHOME=`cd "$SFHOME" && pwd`
    export SFHOME
    echo "SFHOME undefined, using $SFHOME as base directory."
fi

## Include setSFProperties
. "$SFHOME/bin/setSFProperties"

## Process command line arguments.
APPSCRIPTS=
ENVSCRIPTS=

## Target hostname needs to come first, or else the -h switch.
if [ "$1" = -h ] && [ "$1" = --help ]; then
	# usage exits script
	usage "This script is used to start a new SmartFrog application on a running daemon. It allows the use of an arbitrary number of parser setup descriptions, followed by an arbitrary number of descriptions for the application itself." 0	
else
	export SFTARGETHOST="$1"; shift
fi

if [ -z "$SFTARGETHOST" ]; then 
	usage "Missing deployment target host name"; 
fi

## Environment
while [ ! -z "$1" ]; do
    case "$1" in                    
        -e | --environment)
            if invalid "$2"; then
                usage "Missing environment description after --environment option."
            fi
            
            ENVSCRIPTS="$ENVSCRIPTS -a :DEPLOY:\"$2\":::"            
            shift            
            ;;        
		-*)
            usage "Unrecognized argument: $1"
            ;;
		*)
			if invalid "$1" && invalid "$2"; then
                usage "Both the application name and description file need to be provided."
            fi
            
            APPSCRIPTS="$APPSCRIPTS -a \"$1\":DEPLOY:\"$2\"::\"__SFTARGETHOST__\":"            
            shift
            ;;
    esac

    shift
done

## Replace placeholder values
APPSCRIPTS=`echo "$APPSCRIPTS" | sed s/__SFTARGETHOST__/"$SFTARGETHOST"/g`

## Post-parse checks
if [ -z "$APPSCRIPTS" ] && [ -z "$ENVSCRIPTS" ]; then
	usage "Either environment descriptions, application descriptions, or both, need to be provided."
fi

## Finally, run SmartFrog with the parsed arguments.
if test "$SFSECURITY"; then
        java $SFSECURITY "$SFDEFAULTINI" org.smartfrog.SFSystem $ENVSCRIPTS $APPSCRIPTS -e -t
else
        java "$SFDEFAULTINI" org.smartfrog.SFSystem $ENVSCRIPTS $APPSCRIPTS -e -t
fi
